{
    "collab_server" : "",
    "contents" : "#'\n#'\n#'\n#' @param\n#' @return\n#' @export\n#'\n#'\n\ntrainMyModels <- function(sc, trainCase1CorrToLoss ,isLossLog, noOutliersIdxs, omitOutliersforTest, omitOutliersforTrain){\n\n  #c(\"idxNoOut\", \"IdxNoOutLog\")\n\n  library(sparklyr)\n  library(caret)\n  library(dplyr)\n\n  # Training GLM and XGB on this dataset\n  # subseting data\n\n\n  if(omitOutliersforTrain){\n    if(isLossLog){\n      trainCase1CorrToLossFinal_subset <- getCaretDataSample(trainCase1CorrToLoss[trainCase1CorrToLoss$id %in% noOutliersIdxs$IdxNoOutLog,],\n                                                             trainCase1CorrToLoss[trainCase1CorrToLoss$id %in% noOutliersIdxs$IdxNoOutLog,]$loss\n                                                             , 50000, 1, 1)\n    }else{\n      trainCase1CorrToLossFinal_subset <- getCaretDataSample(trainCase1CorrToLoss[trainCase1CorrToLoss$id %in% noOutliersIdxs$idxNoOut,],\n                                                             trainCase1CorrToLoss[trainCase1CorrToLoss$id %in% noOutliersIdxs$idxNoOut,]$loss\n                                                             , 50000, 1, 1)\n    }\n\n  } else {\n    trainCase1CorrToLossFinal_subset <- getCaretDataSample(trainCase1CorrToLoss,\n                                                           trainCase1CorrToLoss$loss\n                                                           , 50000, 1, 1)\n  }\n\n  trainCase1CorrToLossFinal_subset <- trainCase1CorrToLossFinal_subset$Resample1\n\n  if(omitOutliersforTest){\n    if(isLossLog){\n      trainCase1CorrToLoss <- trainCase1CorrToLoss[trainCase1CorrToLoss$id %in% noOutliersIdxs$IdxNoOutLog, ]\n    } else {\n      trainCase1CorrToLoss <- trainCase1CorrToLoss[trainCase1CorrToLoss$id %in% noOutliersIdxs$idxNoOut, ]\n    }\n  }\n\n  testCase1CorrToLossFinal_subset <- getCaretDataSample(trainCase1CorrToLoss[!(trainCase1CorrToLoss$id %in% trainCase1CorrToLossFinal_subset$id),],\n                                                        trainCase1CorrToLoss[!(trainCase1CorrToLoss$id %in% trainCase1CorrToLossFinal_subset$id), ]$loss,\n                                                        20000, 1, 2)\n  testCase1CorrToLossFinal_subset <- testCase1CorrToLossFinal_subset$Resample1\n\n  nObsCorrToLoss <- length(unlist(testCase1CorrToLossFinal_subset[,1]))\n  nPredCorrToLoss <- length(colnames(testCase1CorrToLossFinal_subset)) - 2\n\n  # sending data to spark\n  trainCase1CorrToLossFinal_subset_tbl <- copy_to(sc, trainCase1CorrToLossFinal_subset, \"trainCase1CorrToLoss\", overwrite = TRUE)\n  testCase1CorrToLossFinal_subset_tbl <- testCase1CorrToLossFinal_subset %>%\n    select(-loss) %>%\n    copy_to(sc, ., \"testCase1CorrToLoss\", overwrite = TRUE)\n  #                               training                      testing\n  datasets <- list(trainCase1CorrToLossFinal_subset, testCase1CorrToLossFinal_subset)\n  names(datasets) <- c(\"trn\", \"tst\")\n\n  # Training GLM model in spark\n\n  trainCase1CorrToLossGLM <- trainCase1CorrToLossFinal_subset_tbl %>%\n    select(-id) %>%\n    ml_generalized_linear_regression(loss ~.)\n\n  bestCorrAIC <- trainCase1CorrToLossGLM$aic\n\n  trainCase1CorrToLossPredictionsGLM_train <- select(trainCase1CorrToLossFinal_subset_tbl, -id) %>%\n    select(-loss) %>%\n    sdf_predict(trainCase1CorrToLossGLM, .) %>%\n    collect()\n\n  trainCase1CorrToLossPredictionsGLM_test <- select(testCase1CorrToLossFinal_subset_tbl , -id) %>%\n    sdf_predict(trainCase1CorrToLossGLM, .) %>%\n    collect()\n\n  adjRsqCorrToLossGLM <- adjRsq(testCase1CorrToLossFinal_subset, trainCase1CorrToLossPredictionsGLM_test, nObsCorrToLoss, nPredCorrToLoss, isLossLog)\n\n  #                           model                     predictions                           R sq adj\n  mod1_glm <- list(trainCase1CorrToLossGLM, trainCase1CorrToLossPredictionsGLM_test, adjRsqCorrToLossGLM)\n  names(mod1_glm) <- c(\"model\", \"predDF\", \"RsqAdj\")\n\n  # Training XGB model in spark\n  # max depth set to 2\n  trainCase1CorrToLossXGB_2 <- trainCase1CorrToLossFinal_subset_tbl %>%\n    select(-id) %>%\n    ml_gradient_boosted_trees(loss ~., type = \"regression\", max.depth = 2)\n\n  trainCase1CorrToLossXGB_5 <- trainCase1CorrToLossFinal_subset_tbl %>%\n    select(-id) %>%\n    ml_gradient_boosted_trees(loss ~., type = \"regression\", max.depth = 5)\n\n  trainCase1CorrToLossXGB_10 <- trainCase1CorrToLossFinal_subset_tbl %>%\n    select(-id) %>%\n    ml_gradient_boosted_trees(loss ~., type = \"regression\", max.depth = 10)\n\n  trainCase1CorrToLossXGB_15 <- trainCase1CorrToLossFinal_subset_tbl %>%\n    select(-id) %>%\n    ml_gradient_boosted_trees(loss ~., type = \"regression\", max.depth = 15)\n\n\n  trainCase1CorrToLossPredictionsXGB_2_test <- select(testCase1CorrToLossFinal_subset_tbl , -id) %>%\n    sdf_predict(trainCase1CorrToLossXGB_2, .) %>%\n    collect()\n\n  adjRsqCorrToLossXGB2 <- adjRsq(testCase1CorrToLossFinal_subset, trainCase1CorrToLossPredictionsXGB_2_test, nObsCorrToLoss, nPredCorrToLoss, isLossLog)\n\n  #                           model                     predictions                               R sq adj\n  mod1_xgb <- list(trainCase1CorrToLossXGB_2, trainCase1CorrToLossPredictionsXGB_2_test, adjRsqCorrToLossXGB2)\n  names(mod1_xgb) <- c(\"model\", \"predDF\", \"RsqAdj\")\n\n  trainCase1CorrToLossPredictionsXGB_5_test <- select(testCase1CorrToLossFinal_subset_tbl , -id) %>%\n    sdf_predict(trainCase1CorrToLossXGB_5, .) %>%\n    collect()\n\n  adjRsqCorrToLossXGB5 <- adjRsq(testCase1CorrToLossFinal_subset, trainCase1CorrToLossPredictionsXGB_5_test, nObsCorrToLoss, nPredCorrToLoss, isLossLog)\n\n  #                           model                     predictions                               R sq adj\n  mod2_xgb <- list(trainCase1CorrToLossXGB_5, trainCase1CorrToLossPredictionsXGB_5_test, adjRsqCorrToLossXGB5)\n  names(mod2_xgb) <- c(\"model\", \"predDF\", \"RsqAdj\")\n\n  trainCase1CorrToLossPredictionsXGB_10_test <- select(testCase1CorrToLossFinal_subset_tbl , -id) %>%\n    sdf_predict(trainCase1CorrToLossXGB_10, .) %>%\n    collect()\n\n  adjRsqCorrToLossXGB10 <- adjRsq(testCase1CorrToLossFinal_subset, trainCase1CorrToLossPredictionsXGB_10_test, nObsCorrToLoss, nPredCorrToLoss, isLossLog)\n\n  #                           model                     predictions                               R sq adj\n  mod3_xgb <- list(trainCase1CorrToLossXGB_10, trainCase1CorrToLossPredictionsXGB_10_test, adjRsqCorrToLossXGB10)\n  names(mod3_xgb) <- c(\"model\", \"predDF\", \"RsqAdj\")\n\n  trainCase1CorrToLossPredictionsXGB_15_test <- select(testCase1CorrToLossFinal_subset_tbl , -id) %>%\n    sdf_predict(trainCase1CorrToLossXGB_15, .) %>%\n    collect()\n\n  adjRsqCorrToLossXGB15 <- adjRsq(testCase1CorrToLossFinal_subset, trainCase1CorrToLossPredictionsXGB_15_test, nObsCorrToLoss, nPredCorrToLoss, isLossLog)\n\n  #                           model                     predictions                               R sq adj\n  mod4_xgb <- list(trainCase1CorrToLossXGB_15, trainCase1CorrToLossPredictionsXGB_15_test, adjRsqCorrToLossXGB15)\n  names(mod4_xgb) <- c(\"model\", \"predDF\", \"RsqAdj\")\n\n  glmMods <- list(mod1_glm)\n  names(glmMods) <- c(\"mod1\")\n\n  xgbMods <- list(mod1_xgb, mod2_xgb, mod3_xgb, mod4_xgb)\n  names(xgbMods) <- c(\"mod1\", \"mod2\", \"mod3\", \"mod4\")\n\n  models <- list(glmMods, xgbMods)\n  names(models) <- c(\"GLM\", \"XGB\")\n\n  listToReturn <- list(models, datasets)\n  names(listToReturn) <- c(\"models\", \"datasets\")\n\n  return(listToReturn)\n\n}\n",
    "created" : 1480044306957.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "684578891",
    "id" : "3CDE249A",
    "lastKnownWriteTime" : 1480551382,
    "last_content_update" : 1480551382727,
    "path" : "~/Desktop/GitFolder/TuataraChallenge/TuataraChallengePackage/R/trainMyModels.R",
    "project_path" : "R/trainMyModels.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 14,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}