build-last-errors="[]"
build-last-errors-base-dir="~/Desktop/GitFolder/TuataraChallenge/TuataraChallengePackage/"
build-last-outputs="[{\"output\":\"==> devtools::document(roclets=c('rd', 'collate', 'namespace', 'vignette'))\\n\\n\",\"type\":0},{\"output\":\"Updating TuataraChallengePackage documentation\\nLoading TuataraChallengePackage\\n\",\"type\":2},{\"output\":\"Deleting adjRsq.Rd\\nDeleting columnSplitterAndFactorizer.Rd\\nDeleting correlationMatrixCreator.Rd\\nDeleting factorizeMyDataset.Rd\\nDeleting getCaretDataSample.Rd\\nDeleting mapFactorizer.Rd\\nDeleting packageInstaller.Rd\\nDeleting readInitialDataFromHDFS.Rd\\nDeleting removeMonovalCols.Rd\\nDeleting removeOutliers.Rd\\nDeleting selectBestCorrelatedToLoss.Rd\\nDeleting selectWeakCorrelatedColumns.Rd\\nDeleting significantCorrelationSelector.Rd\\nDeleting simpleFactorizer.Rd\\nDeleting simplifyColnamesForCorrPlot.Rd\\nDeleting trainMyModels.Rd\\nDeleting trainMyXGBModels.Rd\\n\",\"type\":1},{\"output\":\"There were 50 or more warnings (use warnings() to see the first 50)\\n\",\"type\":2},{\"output\":\"Documentation completed\\n\\n\",\"type\":1},{\"output\":\"==> R CMD INSTALL --no-multiarch --with-keep.source TuataraChallengePackage\\n\\n\",\"type\":0},{\"output\":\"* installing to library ‘/home/konrad/R/x86_64-pc-linux-gnu-library/3.3’\\n\",\"type\":1},{\"output\":\"* installing *source* package ‘TuataraChallengePackage’ ...\\n\",\"type\":1},{\"output\":\"** R\\n\",\"type\":1},{\"output\":\"** preparing package for lazy loading\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** help\\n\",\"type\":1},{\"output\":\"*** installing help indices\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** building package indices\\n\",\"type\":1},{\"output\":\"** testing if installed package can be loaded\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"* DONE (TuataraChallengePackage)\\n\",\"type\":1},{\"output\":\"\",\"type\":1}]"
compile_pdf_state="{\"errors\":[],\"output\":\"\",\"running\":false,\"tab_visible\":false,\"target_file\":\"\"}"
console_procs="[]"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":false,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOff\":[],\"matchOn\":[]},\"running\":false}"
imageDirtyState="0"
saveActionState="0"
